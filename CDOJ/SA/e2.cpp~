#include<iostream>
#include<cstring>
#include<cstdlib>
#include<cstdio>

using namespace std;

int a[70];
bool vis[70];
int n,x,cnt;

int cmp(const void *a,const void *b)
{
	return *(int*)b-*(int*)a;
}

bool dfs(int t,int now,int res)
{
	if(--cnt==0)
		return false;
	if(res<0)
		return false;
	if(now+res<x)
		return false;
	if(now==x)
	{
		res-=x;
		if(res==0)
			return true;
		for(t=0;vis[t];t++);
		vis[t]=1;
		if(dfs(t+1,a[t],res))
			return true;
		vis[t]=0;
		res+=x;
	}
	else
	{
		for(int i=t;i<n;i++)
		{
			if(i>0&&(a[i]==a[i-1]&&!vis[i-1]))
				continue;
			if(!vis[i]&&now+a[i]<=x)
			{
				now+=a[i];
				vis[i]=1;
				if(dfs(i+1,now,res))
					return true;
				now-=a[i];
				vis[i]=0;
				if(a[i]==res)
					return false;
				if(a[i]+now==x)
					break;
			}
		}
	}
	return false;
}

int main()
{
	while(1)
	{
		scanf("%d",&n);
		if(n==0)
			break;
		memset(a,-1,sizeof(a));
		int sum=0;
		for(int i=0;i<n;i++)
		{
			scanf("%d",&a[i]);
			sum+=a[i];
		}
		if(n==1)
		{
			printf("%d\n",a[0]);
			continue;
		}
		if(sum==0)
		{
			printf("%d\n",a[0]);
			continue;
		}
		qsort(a,n,sizeof(int),cmp);
		int ans=sum;
		for(x=a[0];x<=sum/2;x++)
		{
			if(sum%x==0)
			{
				for(int i=0;i<n;i++)
					vis[i]=0;
				if(dfs(0,0,sum))
				{
					cnt=1000000;
					ans=x;
					break;
				}
			}
		}
		printf("%d\n",ans);
	}
	return 0;
}

