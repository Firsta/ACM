    纯用dfs算法会超时，要考虑各种剪枝。
    剪枝一：由于小木棒的灵活度更高，所以每次选下一截时优先选较长的木棒，这样后面就能用更灵活的小木棒，所以一开始把木棒按降序排列。
    剪枝二：长度大于sum/2是不可能的，小于最长的木棒也是不可能的，因此枚举的长度范围为a[0]~sum/2。
    剪枝三：在拼凑当前的木棒时，如果一根木棒已证明为不可用，则后面和它长度相同的木棒就不比在dfs了。
    剪枝四：在找一根新木棒的第一根木棒是，如果当前未使用的木棒的最大者不可用，就说明这个长度不可取了，不必再搜索，这个是最重要的剪枝，卡了我很久啊~