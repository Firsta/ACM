    数位dp。
    设dp[i][j]为长度为i，最高位值为j的符合条件的数的个数，这里的dp是包含前导零的，不然没法推，然后cnt[i]数组保存长度不大于i的符合条件的数，这里的cnt不包含前导零，不然肯定会重复的。
    然后dp[i][j]可以由dp[i-1][k]推出，同时要满足|k-j|>=2。
    因此转移方程为：dp[i][j]+=dp[i-1][k] |k-j|>=2
                    cnt[i]+=dp[i][j] (j>0)
                    cnt[i]+=cnt[i-1]
    然后dp初始化后就要处理输入的数啦。从高位开始统计，考虑当前的一位，每一个它小的数后面的位都无限制，可以直接+=cnt[i-1]，如果这一位的值与last的差值绝对值大于2则可以把last设为当前值，继续枚举下去，否则循环中值，若到最后一位还是符合条件则res++，所以我这里求的是[1,n]符合条件的数。
    ans=solve(b)-solve(a)。
    统计过程的时间复杂度是O(n)。