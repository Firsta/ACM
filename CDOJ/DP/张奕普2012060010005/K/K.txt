    区间dp问题，把所有金币堆合成一堆必须先把金币合成两堆再把这两堆合成一堆。所以设dp[i][j]为把第i到第j堆合成一堆所消耗的最小体力值，状态转移方程为：dp[i][j]=min(dp[i][k]+dp[k+1][j]+sum(i,j))  (i<=k<j)
    由于金币围成一个圈，可以用2*n的数组存储金币值i>=n时a[i]=a[i]-n(从0开始)，然后把区间长度限制在n以内即可。
    因为求的是最小值所以先把所以dp值初始化为INF，然后原来就是一堆的不需要消耗体力值，dp[i][i]初始化为0。
    注意区间dp的递推顺序是由小的区间推出大的区间，所以最外层循环是区间长度递增。
    由主循环可得时间复杂度为O(n^3)。