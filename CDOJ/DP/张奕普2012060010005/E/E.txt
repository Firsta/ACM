    其实有相隔最小w天就可以联想到单调队列的性质了。
    设dp[i][j]为第i天持有j股时赚钱的最大值，由于前w+1天，只能交易一次而且这个交易只能是买，所以都可以初始化为-j*ap[i]。
    转移方式有三种：
    1.当天不买也不卖:dp[i+1][j]=dp[i][j];	
    2.当天买了j-k股:dp[i+1][j]=max(dp[r][k]+(j-k)*Ap[i]); (r<i-w-1)    3.当天卖了k-j股:dp[i+1][j]=max(dp[r][k]+(k-j)*Bp[i]); (r<i-w-1)
    容易看出第二、三种情况的转移方程是一样的，不同的只是递推顺序，买股要从持股更小的状态推出而卖股要从持股更大的状态推出。令f[k]=dp[i-w-1][k]-k*Ap[i])，原式变为 dp[i][j]=max(f[k])+j*Ap[i] （0=<k<j），有方程形式看出可以用单调队列维护。
    因为第二、三方程的递推顺序不一样，所以两种情况要分开出来，所以处理时都要初始化单调队列。
    又第一个进队的元素无需判断因为原队列为空，所以先进第一个元素在从第二个元素开始递推，这个烦了我超级久。
    时间复杂度为：O(n*m)。
    答案要从i=n的dp值中找出最大值。