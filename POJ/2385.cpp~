#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<climits>
#include<algorithm>
#include<vector>
#include<stack>
#include<set>
#include<queue>
#include<map>
#include<fstream>
#include<sstream>
#include<string>

typedef long long ll;
using namespace std;

int dp[1005][35][3];
int a[1005];

int main()
{
//  freopen("test.in","r",stdin);
//  freopen("test.out","w",stdout);
	int t,w;
	scanf("%d%d",&t,&w);
	for(int i=1;i<=t;i++)
		scanf("%d",&a[i]);
	memset(dp,-1,sizeof(dp));
	if(a[1]==1)
	{
		dp[1][0][1]=1;
	}
	else
		dp[1][1][2]=1;
	for(int i=1;i<=t;i++)
		for(int j=0;j<=w;j++)
		{
/*			if(j==0)
			{
				dp[i][j][1]=dp[i-1][j][1];
				dp[i][j][2]=dp[i-1][j][2];
			}
			else
			{
				if(a[i]==1)
				{
					dp[i][j][1]=max(dp[i-1][j][1],dp[i-1][j-1][2])+1;
					dp[i][j][2]=max(dp[i-1][j][2],max(dp[i-1][j-1][1],dp[i-1][j-2][2]+1));
				}
				else
				{
					dp[i][j][1]=max(dp[i-1][j][1],max(dp[i-1][j-1][2],dp[i-1][j-2][1]+1));
					dp[i][j][2]=max(dp[i-1][j][2],dp[i-1][j-1][1])+1;
				}
			}*/
			int t1=dp[i-1][j][1],t2=dp[i-1][j][2];
			if(j>=1)
			{
				if(a[i]==1)
				{
					if(dp[i-1][j-1][2]!=-1)
						t1=max(t1,dp[i-1][j-1][2])+1;
					if(dp[i-1][j-1][1]!=-1)
						t2=max(t2,dp[i-1][j-1][1]);
				}
				else
				{
					if(dp[i-1][j-1][2]!=-1)
						t1=max(t1,dp[i-1][j-1][2]);
					if(dp[i-1][j-1][1]!=-1)
						t2=max(t2,dp[i-1][j-1][1])+1;
				}
			}
			if(j>=2)
			{
				if(a[i]==1)
				{
					if(dp[i-1][j-2][2]!=-1)
						t2=max(t2,dp[i-1][j-2][2]+1);
				}
				else
				{
					if(dp[i-1][j-2][1]!=-1)
						t1=max(t1,dp[i-1][j-2][1]+1);
				}
			}
			dp[i][j][1]=t1;
			dp[i][j][2]=t2;
		}
	for(int i=1;i<=t;i++)
	{
		for(int j=0;j<=w;j++)
			cout<<dp[i][j][1]<<' ';
		cout<<endl;
	}
	cout<<endl;
	for(int i=1;i<=t;i++)
	{
		for(int j=0;j<=w;j++)
			cout<<dp[i][j][2]<<' ';
		cout<<endl;
	}
	printf("%d\n",max(dp[t][w][1],dp[t][w][2]));
	return 0;
}
